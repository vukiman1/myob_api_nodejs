services:
  postgresql:
    image: postgres:16-alpine
    env_file:
      - .env
    ports:
      - '${DB_PORT:-5432}:5432'
    restart: always
    volumes:
      - ${PG_DATA:-postgresql-data}:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Sup3rS3cr3T}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_DB: ${DB_NAME:-myapp}
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-myapp}']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    env_file:
      - .env
    volumes:
      - ${REDIS_DATA:-redis-data}:/data
    restart: always
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    env_file:
      - .env
    build: .
    container_name: adonis-app
    ports:
      - '8888:8888'
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-Sup3rS3cr3T}
      - DB_NAME=${DB_NAME:-myapp}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped

volumes:
  postgresql-data:
  redis-data:
